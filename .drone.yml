# -*- fill-column: 1000 -*-
kind: pipeline
name: build x86_64

volumes:
- name: debian-package-cache
  host:
    path: /var/cache/debian-package-cache

trigger:
  event:
    exclude:
    - tag

steps:
- name: gcc8
  image: debian:buster-slim
  pull: always
  environment:
    CXX: g++-8
    CXXFLAGS: -pipe -O2
    LANG: en_US.utf-8
  commands:
  - rm /etc/apt/apt.conf.d/docker-clean
  - alias apt-get='rm -f /var/cache/apt/archives/lock && apt-get'
  - apt-get update -q
  - apt-get install -qy g++ cmake pkg-config libpoco-dev libxdg-basedir-dev asciidoc catch
  - rm -rf build && mkdir -p build && cd build
  - cmake -DWITH_MOZILLA=YES -DWITH_TESTS=YES ..
  - make VERBOSE=1
  - make install DESTDIR=install
  - cd tests && ctest -V
  volumes:
  - name: debian-package-cache
    path: /var/cache/apt/archives

- name: gcc9
  image: debian:buster-slim
  pull: always
  environment:
    CXX: g++-9
    CXXFLAGS: -pipe -O2
    LANG: en_US.utf-8
  commands:
  - rm /etc/apt/apt.conf.d/docker-clean
  - alias apt-get='rm -f /var/cache/apt/archives/lock && apt-get'
  - apt-get update -q
  - echo "APT::Default-Release \"buster\";" >> /etc/apt/apt.conf.d/00default_release
  - echo "deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu bionic main" >> /etc/apt/sources.list.d/ubuntu-toolchain-r.list
  - apt-get install -qy gnupg
  - gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 0x60c317803a41ba51845e371a1e9377a2ba9ef27f
  - gpg --armor --export 0x60c317803a41ba51845e371a1e9377a2ba9ef27f | apt-key add -
  - apt-get update -q
  - apt-get install -qy -t bionic g++-9
  - apt-get install -qy cmake pkg-config libpoco-dev libxdg-basedir-dev asciidoc catch
  - rm -rf build && mkdir -p build && cd build
  - cmake -DWITH_MOZILLA=YES ..
  - make VERBOSE=1
  volumes:
  - name: debian-package-cache
    path: /var/cache/apt/archives

- name: clang6
  image: debian:buster-slim
  pull: always
  environment:
    CXX: clang++
    CXXFLAGS: -pipe -O2
    LANG: en_US.utf-8
  commands:
  - rm /etc/apt/apt.conf.d/docker-clean
  - alias apt-get='rm -f /var/cache/apt/archives/lock && apt-get'
  - apt-get update -q
  - apt-get install -qy clang-6.0 cmake pkg-config libpoco-dev libxdg-basedir-dev asciidoc catch
  - rm -rf build && mkdir -p build && cd build
  - cmake -DWITH_MOZILLA=YES ..
  - make VERBOSE=1
  volumes:
  - name: debian-package-cache
    path: /var/cache/apt/archives

- name: clang7
  image: debian:buster-slim
  pull: always
  environment:
    CXX: clang++
    CXXFLAGS: -pipe -O2
    LANG: en_US.utf-8
  commands:
  - rm /etc/apt/apt.conf.d/docker-clean
  - alias apt-get='rm -f /var/cache/apt/archives/lock && apt-get'
  - apt-get update -q
  - apt-get install -qy clang cmake pkg-config libpoco-dev libxdg-basedir-dev asciidoc catch
  - rm -rf build && mkdir -p build && cd build
  - cmake -DWITH_MOZILLA=YES ..
  - make VERBOSE=1
  volumes:
  - name: debian-package-cache
    path: /var/cache/apt/archives

- name: notify
  image: drillster/drone-email
  pull: always
  settings:
    host: cryptoparty-celle.de
    from: drone@tzend.de
    username:
      from_secret: email_username
    password:
      from_secret: email_password
  when:
    status: [ changed, failure ]


---
kind: pipeline
name: packages x86_64

volumes:
- name: debian-package-cache
  host:
    path: /var/cache/debian-package-cache
- name: centos-package-cache
  host:
    path: /var/cache/centos-package-cache

trigger:
  event:
    - tag

steps:
- name: deb
  image: debian:buster-slim
  pull: always
  environment:
    CXX: g++
    CXXFLAGS: -pipe -O2
    LANG: en_US.utf-8
  commands:
  - rm /etc/apt/apt.conf.d/docker-clean
  - alias apt-get='rm -f /var/cache/apt/archives/lock && apt-get'
  - apt-get update -q
  - apt-get install -qy g++ cmake pkg-config libpoco-dev libxdg-basedir-dev asciidoc catch
  - apt-get install -qy build-essential file
  - rm -rf build && mkdir -p build && cd build
  - cmake -DCMAKE_INSTALL_PREFIX=/usr -DWITH_MOZILLA=YES -DMOZILLA_NMH_DIR="lib/mozilla/native-messaging-hosts" -DWITH_DEB=YES ..
  - make package
  - cp -v remwharead_${DRONE_TAG}-0_amd64.deb ..
  volumes:
  - name: debian-package-cache
    path: /var/cache/apt/archives

- name: release
  image: plugins/gitea-release
  pull: always
  settings:
    base_url: https://schlomp.space
    api_key:
      from_secret: gitea_token
    title: ${DRONE_TAG}
    prerelease: true
    files:
      - remwharead_${DRONE_TAG}-0_amd64.deb
      # - remwharead-${DRONE_TAG}-0.x86_64.rpm
    checksum:
      - sha512

- name: notify
  image: drillster/drone-email
  pull: always
  settings:
    host: cryptoparty-celle.de
    from: drone@tzend.de
    username:
      from_secret: email_username
    password:
      from_secret: email_password
  when:
    status: [ changed, failure ]
